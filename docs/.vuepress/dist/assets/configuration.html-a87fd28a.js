import{_ as e,X as a,Y as l,a1 as o}from"./framework-6ad2459b.js";const s={},n=o(`<p>MapStructPlus 提供了多个配置项，来指定生成转换接口时的一些行为。</p><h2 id="使用方式" tabindex="-1"><a class="header-anchor" href="#使用方式" aria-hidden="true">#</a> 使用方式</h2><p>在需要进行配置的模块中，新建配置类，在该类上面增加注解：<code>@MapperConfig</code>，<strong>在一个模块中，只能有一个有该注解的类</strong>。 同时，还要注意<strong>配置类一定要放在要生效的模块中</strong></p><p>例如：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">MapperConfig</span><span style="color:#E06C75;">(</span><span style="color:#D19A66;">adapterClassName</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;DemoConvertMapperAdapter&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#D19A66;">adapterPackage</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;io.github.linpeilie.adapter&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#D19A66;">mapAdapterClassName</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;DemoMapConvertMapperAdapter&quot;</span><span style="color:#E06C75;">)</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">MapStructPlusConfiguration</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置项" tabindex="-1"><a class="header-anchor" href="#配置项" aria-hidden="true">#</a> 配置项</h2><h3 id="mapperpackage" tabindex="-1"><a class="header-anchor" href="#mapperpackage" aria-hidden="true">#</a> mapperPackage</h3><ul><li><strong>说明</strong>：生成的 Mapper 转换接口的包名</li><li><strong>类型</strong>：<code>String</code></li><li><strong>默认值</strong>：默认生成在要转换的类同包名下</li></ul><h3 id="unmappedsourcepolicy" tabindex="-1"><a class="header-anchor" href="#unmappedsourcepolicy" aria-hidden="true">#</a> unmappedSourcePolicy</h3><ul><li><strong>说明</strong>：当来源类中没有对应属性时的策略，默认忽略</li><li><strong>类型</strong>：<code>ReportingPolicy</code></li><li><strong>可选项</strong>： <ul><li><code>IGNORE</code>：忽略</li><li><code>WARN</code>：打印警告日志</li><li><code>ERROR</code>：抛出异常</li></ul></li><li><strong>默认值</strong>：<code>IGNORE</code></li></ul><h3 id="unmappedtargetpolicy" tabindex="-1"><a class="header-anchor" href="#unmappedtargetpolicy" aria-hidden="true">#</a> unmappedTargetPolicy</h3><ul><li><strong>说明</strong>：当目标类中没有对应属性时的策略，默认忽略</li><li><strong>类型</strong>：<code>ReportingPolicy</code></li><li><strong>可选项</strong>： <ul><li><code>IGNORE</code>：忽略</li><li><code>WARN</code>：打印警告日志</li><li><code>ERROR</code>：抛出异常</li></ul></li><li><strong>默认值</strong>：<code>IGNORE</code></li></ul><h3 id="nullvaluemappingstrategy" tabindex="-1"><a class="header-anchor" href="#nullvaluemappingstrategy" aria-hidden="true">#</a> nullValueMappingStrategy</h3><ul><li><strong>说明</strong>：空值对象处理策略，默认返回空值</li><li><strong>类型</strong>：<code>NullValueMappingStrategy</code></li><li><strong>可选项</strong>： <ul><li><code>RETURN_NULL</code>：返回空值</li><li><code>RETURN_DEFAULT</code>：返回默认值</li></ul></li><li><strong>默认值</strong>：<code>RETURN_NULL</code></li></ul><h3 id="nullvaluepropertymappingstrategy" tabindex="-1"><a class="header-anchor" href="#nullvaluepropertymappingstrategy" aria-hidden="true">#</a> nullValuePropertyMappingStrategy</h3><ul><li><strong>说明</strong>：当属性值为 <code>null</code> 时应对的策略，默认设置 <code>null</code></li><li><strong>类型</strong>：<code>NullValuePropertyMappingStrategy</code></li><li><strong>可选项</strong>： <ul><li><code>SET_TO_NULL</code>：设置为 <code>null</code></li><li><code>SET_TO_DEFAULT</code>：设置为默认值</li><li><code>IGNORE</code>：忽略</li></ul></li><li><strong>默认值</strong>：<code>SET_TO_NULL</code></li></ul><h3 id="builder" tabindex="-1"><a class="header-anchor" href="#builder" aria-hidden="true">#</a> builder</h3><ul><li><strong>说明</strong>：构造者模式配置，MapStruct 与 lombok 的 builder 一起使用时，会丢失父类属性，所以这里将默认使用构造者模式关闭</li><li><strong>类型</strong>：<code>Builder</code></li><li><strong>支持配置项</strong>： <ul><li><code>buildMethod</code>：构造器创建要构建类型时的构造方法</li><li><code>disableBuilder</code>：打开/关闭构造器，如果关闭，则只使用常规的 getters/setters</li></ul></li><li><strong>默认值</strong>： <ul><li><code>buildMethod</code>：<code>build</code></li><li><code>disableBuilder</code>：<code>true</code></li></ul></li></ul><h3 id="adapterpackage" tabindex="-1"><a class="header-anchor" href="#adapterpackage" aria-hidden="true">#</a> adapterPackage</h3><blockquote><p>since <code>1.2.3</code></p></blockquote><ul><li><strong>说明</strong>：ConvertAdapterClass 和 MapConvertMapperAdapter 的包名</li><li><strong>类型</strong>：<code>String</code></li><li><strong>默认值</strong>：io.github.linpeilie</li></ul><h3 id="adapterclassname" tabindex="-1"><a class="header-anchor" href="#adapterclassname" aria-hidden="true">#</a> adapterClassName</h3><blockquote><p>since <code>1.2.3</code></p></blockquote><ul><li><strong>说明</strong>：ConvertAdapterClass 类名</li><li><strong>类型</strong>：<code>String</code></li><li><strong>默认值</strong>：ConvertMapperAdapter</li></ul><h3 id="mapadapterclassname" tabindex="-1"><a class="header-anchor" href="#mapadapterclassname" aria-hidden="true">#</a> mapAdapterClassName</h3><blockquote><p>since <code>1.2.3</code></p></blockquote><ul><li><strong>说明</strong>：MapConvertMapperAdapter 类名</li><li><strong>类型</strong>：<code>String</code></li><li><strong>默认值</strong>：MapConvertMapperAdapter</li></ul>`,27),r=[n];function t(i,c){return a(),l("div",null,r)}const p=e(s,[["render",t],["__file","configuration.html.vue"]]);export{p as default};
