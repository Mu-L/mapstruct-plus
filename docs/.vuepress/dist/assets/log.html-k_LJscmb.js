import{_ as n,r as u,o as a,c as s,a as e,b as l,d as t,e as o}from"./app-TsO7MrGw.js";const d={},r=e("h3",{id:"_1-4-0",tabindex:"-1"},"1.4.0",-1),c=e("li",null,[e("strong",null,"优化复杂对象转换逻辑，占用元空间更小！性能更快！")],-1),p=e("li",null,"去除 hutool 等依赖，目前项目中只依赖了 MapStruct",-1),_=e("li",null,"适配对象循环嵌套场景",-1),h={href:"https://github.com/linpeilie/mapstruct-plus/pull/63",target:"_blank",rel:"noopener noreferrer"},g=e("code",null,"AutoMapping",-1),A=e("code",null,"ReverseAutoMapping",-1),f=e("code",null,"qualifiedByName",-1),b=e("code",null,"conditionQualifiedByName",-1),x=e("code",null,"dependsOn",-1),M={href:"https://gitee.com/easii/mapstruct-plus/issues/I93Z2Z",target:"_blank",rel:"noopener noreferrer"},m=e("code",null,"AutoMappings",-1),E=e("p",null,"升级 1.4.0 注意事项：",-1),k=e("code",null,"ConvertMapperAdapter",-1),v={href:"/guide/faq.html",target:"_blank",rel:"noopener noreferrer"},I=e("code",null,"NoSuchMethodError",-1),B=e("code",null,"adapterPackage",-1),C=e("li",null,[l("Map 与对象的转换，还是依赖 hutool 中的类转换实现，如果需要该功能，需要额外引入 "),e("code",null,"hutool-core"),l(" 依赖包。")],-1),y=e("h3",{id:"_1-3-6",tabindex:"-1"},"1.3.6",-1),N=e("li",null,"兼容内部类转换",-1),P=e("li",null,"feature : AutoMapping 注解中的 targetClass 支持配置父类",-1),S={href:"https://gitee.com/easii/mapstruct-plus/issues/I8QPRO",target:"_blank",rel:"noopener noreferrer"},D={href:"https://gitee.com/easii/mapstruct-plus/issues/I8T7EF",target:"_blank",rel:"noopener noreferrer"},V=o('<h3 id="_1-3-5" tabindex="-1">1.3.5</h3><ul><li>AutoMapping、ReverseAutoMapping 支持配置在方法上面；</li><li>AutoMapping、ReverseAutoMapping 支持 defaultExpression 和 conditionExpression 属性</li></ul><h3 id="_1-3-4" tabindex="-1">1.3.4</h3><p>……什么都没更新，腾讯云maven源同步的jar有问题，只能重新发个新包</p><h3 id="_1-3-3" tabindex="-1">1.3.3</h3><ul><li>fixbug: 修复 win JDK8 编译报错问题</li></ul><h3 id="_1-3-2" tabindex="-1">1.3.2</h3><ul><li>不可变对象支持，可以使用任意包下的 <code>Immutable</code> 标注类型为不可变类</li><li>全面适配 IDEA 部分编译问题，使用更加流畅丝滑</li></ul><h3 id="_1-3-1" tabindex="-1">1.3.1</h3><ul><li>增加编译参数中指定配置类的功能</li><li>更好地适配 IDEA 部分编译场景</li></ul><h3 id="_1-3-0" tabindex="-1">1.3.0</h3><ul><li>fix: 解决本地开发时 IDEA 编译或者运行时报错等与预期不一致的问题</li><li>feature: AutoMapper 注解增加 imports 属性支持</li></ul><h3 id="_1-2-5" tabindex="-1">1.2.5</h3><ul><li>fix: 解决 MapConvertMapperAdapter 编译警告问题</li><li>feat: 增加 <code>nullValueMappingStrategy</code> 和 <code>nullValuePropertyMappingStrategy</code> 配置项</li><li>feat: 适配 solon</li></ul><h3 id="_1-2-4" tabindex="-1">1.2.4</h3><ul><li>fixbug: 修复当项目中只有 AutoMappers 注解时，没有生成转换接口的问题</li></ul><h3 id="_1-2-3" tabindex="-1">1.2.3</h3>',17),F=e("li",null,[l("MapStructPlus 版本由 "),e("code",null,"1.5.3.Final"),l(" 升级为 "),e("code",null,"1.5.5.Final")],-1),R=e("li",null,[l("增加自定义 "),e("code",null,"ConvertMapperAdapter"),l(" 和 "),e("code",null,"MapConvertMapperAdapter"),l(" 类名和包名的功能")],-1),T={href:"/guide/class-convert.html#%E8%87%AA%E5%8A%A8%E6%8E%A5%E5%85%A5%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BD%AC%E6%8D%A2%E6%8E%A5%E5%8F%A3",target:"_blank",rel:"noopener noreferrer"},Z=o('<h3 id="_1-2-2" tabindex="-1">1.2.2</h3><ul><li>fixbug: 定义多个uses时的问题</li><li>feature: 增加 <code>@AutoEnumMapper</code> 注解，可以在类型转换时，自动转换枚举</li></ul><h3 id="_1-2-1" tabindex="-1">1.2.1</h3><ul><li>解决JDK17编译警告</li></ul><h3 id="_1-2-0" tabindex="-1">1.2.0</h3><ul><li>增加unmappedSourcePolicy、unmappedTargetPolicy配置，并且设置unmappedTargetPolicy默认为ignore</li><li>增加Builder配置，并设置disableBuilder默认为true</li></ul><h3 id="_1-1-8" tabindex="-1">1.1.8</h3><ul><li>解决当只有 @AutoMapMapper 注解时，没有生成转换器的问题</li><li>修改没有找到转换器时的异常描述</li></ul><h2 id="_1-1-7" tabindex="-1">1.1.7</h2>',9),q={href:"https://github.com/linpeilie/mapstruct-plus/issues/11",target:"_blank",rel:"noopener noreferrer"},L=e("li",null,"添加寻找转换接口的缓存，转换速度更快",-1),O=o('<h2 id="_1-1-6" tabindex="-1">1.1.6</h2><ul><li>支持在添加 <code>AutoMapper</code> 的类中，配置目标类到当前类的转换规则，适配多种场景下的使用；</li><li><code>AutoMapper</code> 增加注解，提供可以配置是否生成转换接口的功能；</li><li><code>AutoMapping</code> 的 target 属性默认可以不填，不填则取当前字段</li><li>升级 mapstruct 版本为 1.5.3.FINAL</li></ul><h2 id="_1-1-5" tabindex="-1">1.1.5</h2><ul><li><code>AutoMapping</code> 增加 <code>source</code> 和 <code>defaultValue</code> 属性支持</li></ul><h2 id="_1-1-4" tabindex="-1">1.1.4</h2><ul><li>增加反向转换配置功能</li><li>解决树状结构转换bug</li></ul><h2 id="_1-1-3" tabindex="-1">1.1.3</h2><ul><li>适配 SpringBoot3</li></ul><h2 id="_1-1-1" tabindex="-1">1.1.1</h2><ul><li>增加 Map 转对象的功能</li><li>增加单个对象与多个对象转换并配置的功能</li></ul>',10);function Q(J,K){const i=u("ExternalLinkIcon");return a(),s("div",null,[r,e("ul",null,[c,p,_,e("li",null,[e("a",h,[l("feature#63"),t(i)]),g,l("、"),A,l(" 支持 "),f,l("、"),b,l(" 和 "),x,l(" 属性")]),e("li",null,[e("a",M,[l("issue#I93Z2Z"),t(i)]),m,l(" 支持配置在方法上面")])]),e("blockquote",null,[E,e("ul",null,[e("li",null,[l("1.4.0 及以后的版本，复杂对象比较依赖项目中生成的 "),k,l("， 在多模块下，由于类加载机制只会加载一个的原因，可能会导致 "),e("a",v,[I,t(i)]),l(" 的异常， 当然，这个问题在之前也会有，几率可能低一些，所以多模块下，务必配置 "),B,l(" 来避免该问题。")]),C])]),y,e("ul",null,[N,P,e("li",null,[e("a",S,[l("issue#I8QPRO"),t(i)]),l(" : 框架自动生成的 AutoMapperConfig 和 AutoMapMapper 包和类名支持配置")]),e("li",null,[e("a",D,[l("issue#I8T7EF"),t(i)]),l(" : 支持在父类中配置的 AutoMapping 注解")])]),V,e("ul",null,[F,R,e("li",null,[l("生成的转换接口，自动接入自定义转换接口，具体"),e("a",T,[l("详见"),t(i)])])]),Z,e("ul",null,[e("li",null,[l("fixBug: "),e("a",q,[l("issue#8"),t(i)]),l(" Converter 转换已有对象不生效的问题")]),L]),O])}const w=n(d,[["render",Q],["__file","log.html.vue"]]);export{w as default};
