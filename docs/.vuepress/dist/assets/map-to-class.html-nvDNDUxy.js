import{_ as i,r as t,o as u,c as d,a as n,b as s,d as a,w as e,e as c}from"./app-K9DHLV5l.js";const k={},r=n("p",null,[s("MapStructPlus 提供了更加强大的 "),n("code",null,"Map<String, Object>"),s(" 转对象的功能。")],-1),m={class:"custom-container warning"},v=n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8v4"}),n("path",{d:"M12 16h.01"})])],-1),g=n("p",{class:"custom-container-title"},"WARNING",-1),b={href:"https://hutool.cn",target:"_blank",rel:"noopener noreferrer"},M=n("code",null,"hutool-core",-1),h=c(`<h2 id="使用" tabindex="-1">使用</h2><h3 id="添加依赖" tabindex="-1">添加依赖</h3><blockquote><p>1.4.0 及以后的版本需要添加该依赖，1.4.0之前的版本内置 hutool，不需要额外添加。</p></blockquote><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>cn.hutool<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hutool-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${hutool.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加注解" tabindex="-1">添加注解</h3><p><strong>当想要自动生成 <code>Map&lt;String, Object&gt;</code> 转为目标类的接口及实现类时，只需要在目标类上添加 <code>@AutoMapMapper</code> 注解</strong>。</p><h2 id="支持的-value-类型" tabindex="-1">支持的 value 类型</h2><ul><li><code>String</code></li><li><code>BigDecimal</code></li><li><code>BigInteger</code></li><li><code>Integer</code></li><li><code>Long</code></li><li><code>Double</code></li><li><code>Boolean</code></li><li><code>Date</code></li><li><code>LocalDateTime</code></li><li><code>LocalDate</code></li><li><code>LocalTime</code></li><li><code>URI</code></li><li><code>URL</code></li><li><code>Calendar</code></li><li><code>Currency</code></li><li><code>自定义类（自定义类也需要增加 @AutoMapMapper 注解）</code></li></ul><h2 id="转换逻辑" tabindex="-1">转换逻辑</h2>`,9),_=n("code",null,"Map",-1),w={href:"https://hutool.cn/docs/#/core/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E5%B7%A5%E5%85%B7%E7%B1%BB-Convert",target:"_blank",rel:"noopener noreferrer"},f=n("p",null,[n("strong",null,[s("且同时支持内部嵌套 "),n("code",null,"Map<String, Object>"),s(" 属性转为内部嵌套的自定义类型属性")]),s("。")],-1),B=n("h2",{id:"示例",tabindex:"-1"},"示例",-1),x=n("ul",null,[n("li",null,[s("定义两个对象："),n("code",null,"MapModelA"),s(" 和 "),n("code",null,"MapModelB")])],-1),y=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@AutoMapMapper"),s(`
`),n("span",{class:"token annotation punctuation"},"@Data"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"MapModelA"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" str"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"int"),s(" i1"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"Long"),s(" l2"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"MapModelB"),s(" mapModelB"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),j=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@AutoMapMapper"),s(`
`),n("span",{class:"token annotation punctuation"},"@Data"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"MapModelB"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"Date"),s(" date"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),A=c(`<ul><li>转换测试</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootTest</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuickStartTest</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">Converter</span> converter<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> mapModel1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mapModel1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;str&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1jkf1ijkj3f&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mapModel1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;i1&quot;</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mapModel1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;l2&quot;</span><span class="token punctuation">,</span> <span class="token number">11231</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> mapModel2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mapModel2<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;date&quot;</span><span class="token punctuation">,</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;2023-02-23 01:03:23&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        mapModel1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;mapModelB&quot;</span><span class="token punctuation">,</span> mapModel2<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> <span class="token class-name">MapModelA</span> mapModelA <span class="token operator">=</span> converter<span class="token punctuation">.</span><span class="token function">convert</span><span class="token punctuation">(</span>mapModel1<span class="token punctuation">,</span> <span class="token class-name">MapModelA</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>mapModelA<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// MapModelA(str=1jkf1ijkj3f, i1=111, l2=11231, mapModelB=MapModelB(date=2023-02-23 01:03:23))</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function q(E,C){const o=t("ExternalLinkIcon"),p=t("CodeGroupItem"),l=t("CodeGroup");return u(),d("div",null,[r,n("div",m,[v,g,n("p",null,[s("MapStructPlus 1.4.0 及以后版本，不再内置 "),n("a",b,[s("Hutool"),a(o)]),s(" 框架，如果需要用到该功能时，需要额外引入 "),M,s(" 依赖。")])]),h,n("p",null,[n("strong",null,[s("针对目标类中的一个属性，首先会判断 "),_,s(" 中是否存在该键，如果存在的话，首先判断类型，如果相同类型，直接强转，如果不同类型，则会基于 "),n("a",w,[s("Hutool"),a(o)]),s(" 提供的类型转换工具尝试转换为目标类型")]),s("。")]),f,B,x,a(l,null,{default:e(()=>[a(p,{title:"MapModelA"},{default:e(()=>[y]),_:1}),a(p,{title:"MapModelB"},{default:e(()=>[j]),_:1})]),_:1}),A])}const S=i(k,[["render",q],["__file","map-to-class.html.vue"]]);export{S as default};
